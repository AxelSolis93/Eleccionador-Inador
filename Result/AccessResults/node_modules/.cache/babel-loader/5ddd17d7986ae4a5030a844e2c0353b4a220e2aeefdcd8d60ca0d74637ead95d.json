{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\Code\\\\Node\\\\elecciones\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './estilos.css';\n// Función auxiliar para obtener los resultados reales desde algún lugar (ahora simularemos los datos)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function obtenerResultadosReales() {\n  return new Promise(resolve => {\n    // Simulación de los datos (reemplaza esto con tus resultados reales)\n    const resultadosSimulados = {\n      candidatos: ['Candidato A', 'Candidato B', 'Candidato C'],\n      votos: [120, 150, 90]\n    };\n    setTimeout(() => {\n      resolve(resultadosSimulados);\n    }, 1000); // Simulamos una pequeña espera para emular una solicitud asincrónica\n  });\n}\n\nconst Resultados = () => {\n  _s();\n  const [resultados, setResultados] = useState(null);\n  useEffect(() => {\n    obtenerResultadosReales().then(data => setResultados(data)).catch(error => setResultados(null));\n  }, []);\n  const generarGraficoResultados = () => {\n    if (!resultados) {\n      return null;\n    }\n    const maxVotos = Math.max(...resultados.votos);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grafico-container\",\n      children: resultados.candidatos.map((candidato, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"barra\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nombre-candidato\",\n          children: candidato\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"100%\",\n          height: \"30\",\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            width: `${resultados.votos[index] / maxVotos * 100}%`,\n            height: \"30\",\n            fill: \"#007bff\",\n            rx: \"15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: \"5\",\n            y: \"18\",\n            fill: \"white\",\n            fontSize: \"14\",\n            children: resultados.votos[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, candidato, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Resultados de la elecci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), resultados ? generarGraficoResultados() : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Obteniendo resultados...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Resultados, \"ZvFzyPGRo2o5vR7Dat3vCwrzuMg=\");\n_c = Resultados;\nexport default Resultados;\nvar _c;\n$RefreshReg$(_c, \"Resultados\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","obtenerResultadosReales","Promise","resolve","resultadosSimulados","candidatos","votos","setTimeout","Resultados","_s","resultados","setResultados","then","data","catch","error","generarGraficoResultados","maxVotos","Math","max","className","children","map","candidato","index","fileName","_jsxFileName","lineNumber","columnNumber","width","height","fill","rx","x","y","fontSize","_c","$RefreshReg$"],"sources":["D:/Documentos/Code/Node/elecciones/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './estilos.css';\n// Función auxiliar para obtener los resultados reales desde algún lugar (ahora simularemos los datos)\nasync function obtenerResultadosReales() {\n  return new Promise((resolve) => {\n    // Simulación de los datos (reemplaza esto con tus resultados reales)\n    const resultadosSimulados = {\n      candidatos: ['Candidato A', 'Candidato B', 'Candidato C'],\n      votos: [120, 150, 90],\n    };\n    setTimeout(() => {\n      resolve(resultadosSimulados);\n    }, 1000); // Simulamos una pequeña espera para emular una solicitud asincrónica\n  });\n}\n\nconst Resultados = () => {\n  const [resultados, setResultados] = useState(null);\n\n  useEffect(() => {\n    obtenerResultadosReales()\n      .then((data) => setResultados(data))\n      .catch((error) => setResultados(null));\n  }, []);\n\n  const generarGraficoResultados = () => {\n    if (!resultados) {\n      return null;\n    }\n\n    const maxVotos = Math.max(...resultados.votos);\n\n    return (\n      <div className=\"grafico-container\">\n        {resultados.candidatos.map((candidato, index) => (\n          <div key={candidato} className=\"barra\">\n            <div className=\"nombre-candidato\">{candidato}</div>\n            <svg width=\"100%\" height=\"30\">\n              <rect\n                width={`${(resultados.votos[index] / maxVotos) * 100}%`}\n                height=\"30\"\n                fill=\"#007bff\"\n                rx=\"15\"\n              />\n              <text x=\"5\" y=\"18\" fill=\"white\" fontSize=\"14\">\n                {resultados.votos[index]}\n              </text>\n            </svg>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <h1>Resultados de la elección</h1>\n      {resultados ? (\n        generarGraficoResultados()\n      ) : (\n        <p>Obteniendo resultados...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Resultados;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}